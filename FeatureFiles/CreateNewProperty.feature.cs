// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace KeyProjectN.FeatureFiles
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Create New Property as \"Affortable Housing\"")]
    public partial class CreateNewPropertyAsAffortableHousingFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreateNewProperty.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Create New Property as \"Affortable Housing\"", "\tIn order Create New Property as \"Affortable Housing\"\r\n\tAs a Property Owner\r\n\tI w" +
                    "ant to have Property details and Tenant Details", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Create New Property as \"Affortable Housing\"")]
        [NUnit.Framework.CategoryAttribute("Create")]
        public virtual void CreateNewPropertyAsAffortableHousing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create New Property as \"Affortable Housing\"", new string[] {
                        "Create"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 9
    testRunner.Given("Login Using Owners Account details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
       testRunner.And("Navigate to Owners tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
       testRunner.And("Select My property page from Owners", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
       testRunner.And("Click on Add New property", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
   testRunner.When("I Select New Property as Affordable Housing and give Valid details for other fiel" +
                    "ds and Click next to get Finance Details page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
       testRunner.And("Enter Valid Information on Finance Details page and click on next to get Tenant D" +
                    "etails page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
       testRunner.And("Enter Valid Details on Tenant Details Page and Click Submit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.Then("User able to Save all information and should get proper Message for Submitting an" +
                    "d New Property as Affordable Housing Should get Created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
